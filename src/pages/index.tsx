import { withAuthenticator } from "@aws-amplify/ui-react";
import {
  Box,
  Button,
  Container,
  Flex,
  FormControl,
  Heading,
  Input,
} from "@chakra-ui/react";
import Head from "next/head";
import React, { useEffect, useState } from "react";

import useRecoveryData from "../hooks/useRecoveryData";

const Home = () => {
  const { getMessages, handleSubmit, getUserName, RootState, isMe } =
    useRecoveryData();
  RootState();

  const [stateMessages, setStateMessages] = useState<any[] | undefined>();

  const user = getUserName();

  useEffect(() => {
    const getMessagesData = async () => {
      const messages = await getMessages();
      setStateMessages(messages);
    };
    getMessagesData();
  }, [getMessages]);

  const [messageText, setMessageText] = useState("");
  const { loadingSendMessage, sendMessage } = handleSubmit;
  const scrollToBottom = () => {
    const element = document.getElementById("chat");
    element?.scrollTo(0, element.scrollHeight);
  };
  useEffect(() => {
    scrollToBottom();
  }, [stateMessages]);

  return (
    <>
      <Head>
        <title>QuickMessage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container
        maxW="container.xl"
        h="100vh"
        display="flex"
        alignItems="center"
        bg="gray.700"
        justifyContent="center">
        <Flex direction="column">
          <Heading
            as="h1"
            fontSize="6xl"
            color="white"
            fontWeight="extrabold"
            letterSpacing="tight"
            lineHeight="shorter">
            QuickMessage
          </Heading>

          <Flex
            direction="column"
            w="100%"
            h="100%"
            bg="white"
            p={8}
            borderRadius="md"
            boxShadow="md">
            <Box
              flex="1"
              overflowY="auto"
              alignItems={"center"}
              justifyContent={"center"}
              display={"flex"}
              maxHeight="60vh"
              id="chat"
              flexDirection={"column"}>
              {stateMessages?.map((message) => (
                <Box
                  key={message.id}
                  w="100%"
                  p={4}
                  bg={isMe(message.owner) ? "teal.100" : "gray.300"}
                  borderRadius="md"
                  mt={4}>
                  <Heading
                    as="h3"
                    fontSize="md"
                    color="gray.700"
                    fontWeight="extrabold"
                    letterSpacing="tight"
                    lineHeight="shorter">
                    {message.message}
                  </Heading>
                  <Heading
                    as="h4"
                    fontSize="md"
                    color="gray.500"
                    fontWeight="extrabold"
                    letterSpacing="tight"
                    lineHeight="shorter">
                    {message.owner}
                  </Heading>
                </Box>
              ))}
            </Box>
            <FormControl
              flex="1"
              overflowY="auto"
              alignItems={"center"}
              justifyContent={"center"}
              display={"flex"}
              flexDirection={"column"}
              mt={4}
              w="100%">
              <Input
                type="text"
                placeholder="Enter your message"
                value={messageText}
                onChange={(e) => setMessageText(e.target.value)}
                size="lg"
                fontWeight="normal"
                letterSpacing="wide"
                alignSelf={"center"}
                fontSize="lg"
                lineHeight="shorter"
                px={8}
                h={14}
                borderRadius="md"
                boxShadow="md"
              />
              <Button
                type="submit"
                colorScheme="teal"
                variant="solid"
                mt={4}
                loadingText="Sending"
                spinnerPlacement="end"
                size="lg"
                fontWeight="extrabold"
                letterSpacing="wide"
                alignSelf={"center"}
                fontSize="lg"
                lineHeight="shorter"
                px={8}
                h={14}
                borderRadius="md"
                boxShadow="md"
                _hover={{
                  boxShadow: "lg",
                }}
                _active={{
                  boxShadow: "xl",
                }}
                _focus={{
                  boxShadow: "xl",
                }}
                isLoading={loadingSendMessage}
                onClick={() => {
                  sendMessage({
                    owner: user,
                    messageText,
                  });
                  setMessageText("");
                }}>
                Send
              </Button>
            </FormControl>
          </Flex>
        </Flex>
      </Container>
    </>
  );
};

export default withAuthenticator(Home);
